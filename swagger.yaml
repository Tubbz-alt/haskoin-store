openapi: 3.0.0
servers:
  - url: 'https://btc.haskoin.com/api/'
  - url: 'https://bch.haskoin.com/api/'
  - url: 'https://btctest.haskoin.com/api/'
  - url: 'https://bchtest.haskoin.com/api/'
info:
  version: 0.8.1
  title: Blockchain API
  contact:
    name: Haskoin
    url: http://haskoin.com
    email: xenog@protonmail.com
  license:
    name: Unlicense
    url: http://unlicense.org/
tags:
  - name: address
  - name: transaction
  - name: block
  - name: network
paths:
  '/health':
    get:
      tags:
        - network
      summary: get health status information
      operationId: healthCheck
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
  '/address/{address}/transactions':
    get:
      tags:
        - address
      summary: get transactions for an address
      operationId: getAddressTxs
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
            format: base58
            example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: maximum number of entries to return
        - name: height
          in: query
          required: false
          schema:
            type: integer
          description: top height in the blockchain
        - name: pos
          in: query
          required: false
          schema:
            type: integer
          description: top transaction position in the block at height specified
        - name: time
          in: query
          required: false
          schema:
            type: integer
          description: top Unix time in milliseconds to return entries from mempool
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressTx'
        '404':
          description: invalid address
  '/address/transactions':
    get:
      tags:
        - address
      summary: get transactions for multiple addresses
      operationId: getMultipleAddressTxs
      parameters:
        - name: addresses
          in: query
          explode: false
          required: true
          schema:
            type: array
            items:
              type: string
              format: base58
              example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: maximum number of entries to return
        - name: height
          in: query
          required: false
          schema:
            type: integer
          description: top height in the blockchain
        - name: pos
          in: query
          required: false
          schema:
            type: integer
          description: top transaction position in the block at height specified
        - name: time
          in: query
          required: false
          schema:
            type: integer
          description: top Unix time in milliseconds to return entries from mempool
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressTx'
        '404':
          description: invalid address
  '/address/{address}/balance':
    get:
      tags:
        - address
      operationId: getBalance
      summary: get balance for an address
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
            format: base58
            example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '404':
          description: invalid address
  '/address/balances':
    get:
      tags:
        - address
      summary: get balances for multiple addresses
      operationId: getMultipleAddressBalances
      parameters:
        - name: addresses
          in: query
          explode: false
          required: true
          schema:
            type: array
            items:
              type: string
              format: base58
              example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Balance'
        '404':
          description: invalid address
  '/address/{address}/unspent':
    get:
      tags:
        - address
      summary: get unspent outputs for an address
      operationId: getAddressUnspent
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
            format: base58
            example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: maximum number of entries to return
        - name: height
          in: query
          required: false
          schema:
            type: integer
          description: top height in the blockchain
        - name: pos
          in: query
          required: false
          schema:
            type: integer
          description: top transaction position in the block at height specified
        - name: time
          in: query
          required: false
          schema:
            type: integer
          description: top Unix time in milliseconds to return entries from mempool
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unspent'
        '404':
          description: invalid address
  '/address/unspent':
    get:
      tags:
        - address
      summary: get unspent outputs for multiple addresses
      operationId: getMultipleAddressUnspent
      parameters:
        - name: addresses
          in: query
          explode: false
          required: true
          schema:
            type: array
            items:
              type: string
              format: base58
              example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: maximum number of entries to return
        - name: height
          in: query
          required: false
          schema:
            type: integer
          description: top height in the blockchain
        - name: pos
          in: query
          required: false
          schema:
            type: integer
          description: top transaction position in the block at height specified
        - name: time
          in: query
          required: false
          schema:
            type: integer
          description: top Unix time in milliseconds to return entries from mempool
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unspent'
        '404':
          description: invalid address
  '/block/best':
    get:
      tags:
        - block
      summary: get best block in chain
      operationId: GetBlockHead
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockData'
  '/block/{block}':
    get:
      tags:
        - block
      operationId: getBlock
      summary: get block by hash
      parameters:
        - name: block
          in: path
          required: true
          schema:
            type: string
            format: hex
            example: '000000000000000000048a43c2930e4826c4262b5d8cef0f5da620e428ab32e2'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockData'
        '404':
          description: block not found
  '/blocks':
    get:
      tags:
        - block
      operationId: getBlocks
      summary: get multiple blocks by hash
      parameters:
        - name: blocks
          in: path
          explode: false
          required: true
          schema:
            type: array
            items:
              type: string
              format: hex
              example: '000000000000000000048a43c2930e4826c4262b5d8cef0f5da620e428ab32e2'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlockData'
        '404':
          description: block not found
  '/block/height/{height}':
    get:
      tags:
        - block
      operationId: getBlocksAtHeight
      summary: get block hashes at specified height
      parameters:
        - name: height
          in: path
          required: true
          schema:
            type: integer
            example: 545199
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlockData'
        '404':
          description: block not found
  '/block/heights':
    get:
      tags:
        - block
      operationId: getBlocksAtHeights
      summary: get multiple blocks at specified heights
      parameters:
        - name: heights
          in: query
          explode: false
          required: true
          schema:
            type: array
            example:
              - 545199
              - 545200
              - 545201
            items:
              type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/BlockData'
        '404':
          description: block not found
  '/transaction/{txid}':
    get:
      tags:
        - transaction
      operationId: getTransaction
      parameters:
        - name: txid
          in: path
          required: true
          schema:
            type: string
            format: hex
            example: '67de069965dcf6b09c9cb7290bc7db05d4d116477359ebbc8748915186cc9384'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: transaction not found
  '/transaction/{txid}/hex':
    get:
      tags:
        - transaction
      operationId: getTransaction
      parameters:
        - name: txid
          in: path
          required: true
          schema:
            type: string
            format: hex
            example: '67de069965dcf6b09c9cb7290bc7db05d4d116477359ebbc8748915186cc9384'
      responses:
        '200':
          description: success
          content:
            text/plain:
              schema:
                type: string
                format: hex
                example: '020000000001017317f53cec0a02bb49c2b4e0259e275573a76942baaf2686b294ad774d9f3e1e010000001716001459c667d41f60ca85fe5f7316c6b55b6cba05d6dffeffffff02fc855f00000000001976a91420742f31c6412adba11cfdd9dd4e4b1ef53512b888ac6d7317000000000017a9143068aa2a15f7bb05d5d9b5665787452ff3fd499a87024730440220096a41d374c1fbbc973213f71409c984b8cd08dc633b20753c6872db0435d23d0220019aeb659de050ef630536095ea1d8cfd6cfa8993c4f535afc5bcc60afddc4b4012102080366d33615dc0b93c9e2d76c52a7383490e183382fafc51f2a3ec2d35ff9b7b7510800'
        '404':
          description: transaction not found
  '/transaction/{txid}/after/{height}':
    get:
      tags:
        - transaction
      operationId: cbAfterHeight
      summary: find out if transaction has a coinbase ancestor past height
      parameters:
        - name: txid
          in: path
          required: true
          schema:
            type: string
            format: hex
            example: '67de069965dcf6b09c9cb7290bc7db05d4d116477359ebbc8748915186cc9384'
        - name: height
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 500000
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                properties:
                  result:
                    description: transaction has a coinbase ancestor after height
                    type: boolean
                    nullable: true
  '/transactions':
    get:
      tags:
        - transaction
      operationId: getTransactions
      parameters:
        - name: txids
          in: query
          explode: false
          required: true
          schema:
            type: array
            items:
              type: string
              format: hex
              example: '67de069965dcf6b09c9cb7290bc7db05d4d116477359ebbc8748915186cc9384'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: transaction not found
    post:
      tags:
        - transaction
      operationId: postTransaction
      requestBody:
        description: transaction to publish
        content:
          text/plain:
            schema:
              type: string
              format: hex
              example: '020000000001017317f53cec0a02bb49c2b4e0259e275573a76942baaf2686b294ad774d9f3e1e010000001716001459c667d41f60ca85fe5f7316c6b55b6cba05d6dffeffffff02fc855f00000000001976a91420742f31c6412adba11cfdd9dd4e4b1ef53512b888ac6d7317000000000017a9143068aa2a15f7bb05d5d9b5665787452ff3fd499a87024730440220096a41d374c1fbbc973213f71409c984b8cd08dc633b20753c6872db0435d23d0220019aeb659de050ef630536095ea1d8cfd6cfa8993c4f535afc5bcc60afddc4b4012102080366d33615dc0b93c9e2d76c52a7383490e183382fafc51f2a3ec2d35ff9b7b7510800'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: invalid transaction
  '/transactions/hex':
    get:
      tags:
        - transaction
      operationId: getTransactions
      parameters:
        - name: txids
          in: query
          explode: false
          required: true
          schema:
            type: array
            items:
              type: string
              format: hex
              example: '67de069965dcf6b09c9cb7290bc7db05d4d116477359ebbc8748915186cc9384'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: hex
                  example: '020000000001017317f53cec0a02bb49c2b4e0259e275573a76942baaf2686b294ad774d9f3e1e010000001716001459c667d41f60ca85fe5f7316c6b55b6cba05d6dffeffffff02fc855f00000000001976a91420742f31c6412adba11cfdd9dd4e4b1ef53512b888ac6d7317000000000017a9143068aa2a15f7bb05d5d9b5665787452ff3fd499a87024730440220096a41d374c1fbbc973213f71409c984b8cd08dc633b20753c6872db0435d23d0220019aeb659de050ef630536095ea1d8cfd6cfa8993c4f535afc5bcc60afddc4b4012102080366d33615dc0b93c9e2d76c52a7383490e183382fafc51f2a3ec2d35ff9b7b7510800'
        '404':
          description: transaction not found
  '/mempool':
    get:
      tags:
        - transaction
      operationId: getMempool
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: maximum number of entries to return
        - name: time
          in: query
          required: false
          schema:
            type: integer
          description: top Unix time in milliseconds to return entries from mempool
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: hex
                  example: '67de069965dcf6b09c9cb7290bc7db05d4d116477359ebbc8748915186cc9384'
  '/events':
    get:
      tags:
        - block
        - transaction
      operationId: getEventStream
      responses:
        '200':
          description: stream
          content:
            application/x-json-stream:
              schema:
                $ref: '#/components/schemas/Event'
  '/peers':
    get:
      tags:
        - network
      operationId: getPeers
      responses:
        '200':
          description: success
          content:
            application/x-json-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peer'
  '/xpub/{xpub}/transactions':
    get:
      tags:
        - address
      operationId: getXPubTransactions
      parameters:
        - name: xpub
          in: path
          required: true
          schema:
            type: string
            format: base58
            example: tpubD9zZePks3yj7D2Mv6w8FsMrRLiuXUwx2z47cXV1abqR48DrMg9yQx4FWHuXat3wzKPnUAETDruzWjCwGks5eorZhdxe5S73R8DJKRrshu6G
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: maximum number of entries to return
        - name: height
          in: query
          required: false
          schema:
            type: integer
          description: top height in the blockchain
        - name: pos
          in: query
          required: false
          schema:
            type: integer
          description: top transaction position in the block at height specified
        - name: time
          in: query
          required: false
          schema:
            type: integer
          description: top Unix time in milliseconds to return entries from mempool
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/XPubTx'
        '400':
          description: invalid xpub
  '/xpub/{xpub}/balances':
    get:
      tags:
        - address
      operationId: getXPubBalances
      parameters:
        - name: xpub
          in: path
          required: true
          schema:
            type: string
            format: base58
            example: tpubD9zZePks3yj7D2Mv6w8FsMrRLiuXUwx2z47cXV1abqR48DrMg9yQx4FWHuXat3wzKPnUAETDruzWjCwGks5eorZhdxe5S73R8DJKRrshu6G
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/XPubBalance'
        '400':
          description: invalid xpub
  '/xpub/{xpub}/unspent':
    get:
      tags:
        - address
      operationId: getXPubUnspent
      parameters:
        - name: xpub
          in: path
          required: true
          schema:
            type: string
            format: base58
            example: tpubD9zZePks3yj7D2Mv6w8FsMrRLiuXUwx2z47cXV1abqR48DrMg9yQx4FWHuXat3wzKPnUAETDruzWjCwGks5eorZhdxe5S73R8DJKRrshu6G
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: maximum number of entries to return
        - name: height
          in: query
          required: false
          schema:
            type: integer
          description: top height in the blockchain
        - name: pos
          in: query
          required: false
          schema:
            type: integer
          description: top transaction position in the block at height specified
        - name: time
          in: query
          required: false
          schema:
            type: integer
          description: top Unix time in milliseconds to return entries from mempool
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/XPubUnspent'
        '400':
          description: invalid xpub
components:
  schemas:
    BlockRef:
      oneOf:
        - $ref: '#/components/schemas/Block'
        - $ref: '#/components/schemas/Mempool'
      example:
        height: 545199
        position: 14
    Block:
      type: object
      required:
        - height
        - position
      properties:
        height:
          description: height of block
          type: integer
          example: 545199
        position:
          description: position of transaction within block
          type: integer
          example: 14
    Mempool:
      type: object
      required:
        - mempool
      properties:
        mempool:
          description: time transaction was received in mempool
          type: integer
          example: 1539278010
    XPubTx:
      type: object
      required:
        - path
        - tx
      properties:
        path:
          description: derivation path (non-hardened)
          type: array
          items:
            type: integer
          example: [1, 25]
        tx:
          $ref: '#/components/schemas/AddressTx'
    XPubBalance:
      type: object
      required:
        - path
        - balance
      properties:
        path:
          description: derivation path (non-hardened)
          type: array
          items:
            type: integer
          example: [1, 25]
        balance:
          $ref: '#/components/schemas/Balance'
    XPubUnspent:
      type: object
      required:
        - path
        - unspent
      properties:
        path:
          description: derivation path (non-hardened)
          type: array
          items:
            type: integer
          example: [1, 25]
        unspent:
          $ref: '#/components/schemas/Unspent'
    AddressTx:
      type: object
      required:
        - address
        - block
        - txid
      properties:
        address:
          type: string
          format: base58
          example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
        block:
          $ref: '#/components/schemas/BlockRef'
        txid:
          type: string
          format: hex
          example: '67de069965dcf6b09c9cb7290bc7db05d4d116477359ebbc8748915186cc9384'
    Balance:
      type: object
      required:
        - address
        - confirmed
        - unconfirmed
        - utxo
        - received
        - txs
      properties:
        address:
          type: string
          format: base58
          example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
        confirmed:
          type: integer
          format: int64
          description: sum of confirmed unspent output values
        unconfirmed:
          type: integer
          format: int64
          description: sum of unconfirmed unspent output values
        utxo:
          description: number of unspent outputs
          type: integer
        received:
          description: total received by this address
          type: integer
        txs:
          description: count of transactions affecting this address
          type: integer
    Unspent:
      type: object
      required:
        - address
        - block
        - txid
        - index
        - pkscript
        - value
      properties:
        address:
          type: string
          format: base58
          example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
        block:
          $ref: '#/components/schemas/BlockRef'
        txid:
          type: string
          format: hex
          example: '1e3e9f4d77ad94b28626afba4269a77355279e25e0b4c249bb020aec3cf51773'
        index:
          type: integer
          example: 1
        pkscript:
          type: string
          format: hex
          example: 'a914edf6588e432cd7dd8d7931ee5657634687874f4b87'
        value:
          type: integer
          format: int64
          description: output value in satoshi
          example: 7897897
    BlockData:
      type: object
      required:
        - hash
        - height
        - mainchain
        - previous
        - time
        - version
        - bits
        - nonce
        - size
        - tx
        - merkle
      properties:
        hash:
          type: string
          format: hex
          example: '000000000000000000048a43c2930e4826c4262b5d8cef0f5da620e428ab32e2'
        size:
          type: integer
          example: 1037064
        height:
          type: integer
          example: 545199
        mainchain:
          type: boolean
          example: true
        previous:
          type: string
          format: hex
          example: '000000000000000000118d430528af530905bc55ff707529f080ca404ef20d08'
        time:
          type: integer
          example: 1539199096
        version:
          type: integer
          format: int32
          example: 536870912
        bits:
          type: integer
          format: int32
          example: 388350353
        nonce:
          type: integer
          format: int32
          example: 611360495
        tx:
          type: array
          example:
            - '8e2d666571877e01a4509d35fa87862162223637feaaf7de4b609f50801ec8ce'
            - '87cb6e0c3136a770191ace304e8217d47dac319051e50ddcc2715a4c4ab4e740'
            - '17c5eeda2ff8ae1674cd63ac62f5eed79f7194d8ec63f936a3304adc925927dd'
            - '5336186fbf190739e58440823e86999b475a03fe8256e630b1f97eea2b9a2e3f'
            - '980949e86992634315fe232a3bfac91744d91bb4fcc132e910cc4cdd5dab8569'
          items:
            type: string
            format: hex
        merkle:
          type: string
          format: hex
          example: '32ba7f6528d9f227f517ae667d66aed4771e23814eaeed606db13be2fc915d15'
    Input:
      type: object
      required:
        - coinbase
        - txid
        - output
        - sigscript
        - sequence
        - pkscript
        - value
        - address
      properties:
        coinbase:
          type: boolean
        txid:
          type: string
          format: hex
          example: '1e3e9f4d77ad94b28626afba4269a77355279e25e0b4c249bb020aec3cf51773'
        output:
          type: integer
          example: 1
        sigscript:
          type: string
          format: hex
          example: '16001459c667d41f60ca85fe5f7316c6b55b6cba05d6df'
        value:
          type: integer
          example: 7897897
        sequence:
          type: integer
          format: int32
          example: 4294967294
        address:
          type: string
          format: base58
          example: '3PPFBRSZWSF2gNmfFLKeVTHvnRmwJAzKED'
        pkscript:
          type: string
          format: hex
          example: '0000000000000017a914edf6588e432cd7dd8d7931ee5657634687874f4b87'
        witness:
          description: witness data on segwit networks
          type: array
          example:
            - '000000000000004730440220096a41d374c1fbbc973213f71409c984b8cd08dc633b20753c6872db0435d23d0220019aeb659de050ef630536095ea1d8cfd6cfa8993c4f535afc5bcc60afddc4b401'
            - '000000000000002102080366d33615dc0b93c9e2d76c52a7383490e183382fafc51f2a3ec2d35ff9b7'
          items:
            type: string
            format: hex
    Spender:
      type: object
      required:
        - txid
        - input
      properties:
        txid:
          type: string
          format: hex
          example: '958819acf4de7be842def87e9bf13e17a8b04d2a5ebed9042af166c1c86bd297'
        input:
          type: integer
          example: 0
    Output:
      type: object
      required:
        - address
        - pkscript
        - value
        - spent
      properties:
        address:
          type: string
          format: base58
          example: '366yjyxLxaL7RP9KN2pyNfQ9CdsfWErmQz'
        pkscript:
          type: string
          format: hex
          example: '0000000000000017a9143068aa2a15f7bb05d5d9b5665787452ff3fd499a87'
        value:
          type: integer
          format: int64
          example: 1536877
        spent:
          type: boolean
          example: true
        spender:
          $ref: '#/components/schemas/Spender'
    Transaction:
      type: object
      required:
        - txid
        - size
        - version
        - locktime
        - fee
        - inputs
        - outputs
        - block
        - deleted
      properties:
        txid:
          type: string
          format: hex
          example: '67de069965dcf6b09c9cb7290bc7db05d4d116477359ebbc8748915186cc9384'
        size:
          type: integer
          example: 249
        version:
          type: integer
          example: 2
        locktime:
          type: integer
          example: 545207
        fee:
          type: integer
          format: int64
          example: 100800
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Input'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Output'
        block:
          $ref: '#/components/schemas/BlockRef'
        deleted:
          type: boolean
          example: true
        rbf:
          type: boolean
          example: false
          description: transaction vulnerable to replace-by-fee
    Event:
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
          enum:
            - tx
            - block
        id:
          type: string
          format: hex
          description: block or transaction id
          example: '67de069965dcf6b09c9cb7290bc7db05d4d116477359ebbc8748915186cc9384'
    Peer:
      type: object
      required:
        - useragent
        - address
        - version
        - services
        - relay
      properties:
        useragent:
          type: string
          example: "/Bitcoin ABC:0.17.2(EB32.0)/"
        address:
          type: string
          example: "127.0.0.1:8333"
        version:
          type: integer
          format: int32
          example: 70015
        services:
          type: integer
          format: int64
          example: 37
        relay:
          type: boolean
          example: true
    HealthCheck:
      type: object
      required:
        - headers
        - blocks
        - peers
        - net
        - ok
        - synced
      properties:
        headers:
          type: object
          required:
            - hash
            - height
          properties:
            hash:
              type: string
              nullable: true
              format: hex
              example: '7f47c17900ba70ac7e15ab08c51f96e6bf90fdb58e9a7e34662fd41e76cfa982'
            height:
              type: integer
              nullable: true
              example: 600
        blocks:
          type: object
          required:
            - hash
            - height
          properties:
            hash:
              type: string
              nullable: true
              format: hex
              example: '7f47c17900ba70ac7e15ab08c51f96e6bf90fdb58e9a7e34662fd41e76cfa982'
            height:
              type: integer
              nullable: true
              example: 600
        peers:
          type: integer
          nullable: true
        net:
          type: string
          example: bchreg
        ok:
          type: boolean
        synced:
          type: boolean
